Как пассажир я хочу иметь возможность простого и интуитивного выбора нужного этажа для того,
чтобы не изучать язык управления лифтом

Тесты
+ после нажатия на кнопку вызова переадресовать вызов модели
+ после нажатия на кнопку при успешном завершении - сказать форме
+ лифт должен стартовать при старте приложения если он установлен
+ если лифт не существует при старте - не паниковать
+ лифт должен стартовать сразу после установки
+ если лифта нет, при вызове бросать ошибку
+ если вызвали с несуществующего этажа - ошибка
+ корректно остановить лифт при остановке
+ при создании лифта бросить эксепшн если есть (нельзя 2 раза стартануть)
-ЕПИК> синхронизировать состояние лифта с ЮИ:
+ Начальное состояние - мы снаружи
+ Начальное состояние - построить панель индикаторов
+ Начальное состояние - построить панель кнопок
+ Начальное состояние - нету дверей, кнопок - ничего пока не синхронизируемся

- Дверь открыта, мы снаружи - можем только войти
- Дверь открыта, мы снаружи - можем только нажать на вызов
- Дверь открыта, мы внутри - можем только нажать на этаж
- Дверь открыта, мы внутри - можем только выйти
- Дверь закрыта, мы снаружи - только вызов
- Дверь закрыта, мы внутри - только нажать на этаж
- Текущий этаж может меняться только когда внутри
- багаЬ CurrentThread не может быть null после десериализации
- когда выходим из формы лифта - корректно ее погасить
- getFloorsCount - возвращать количество этажей
- getFloorsCount - exception если лифт не установлен
+ Все равно просится Lift вместо - Elevator, так короче ))

EPIC>- лифт должен ездить (не понятно пока как реализовать, реализую при многопользовательской истории)
- лифт - многопоточное приложение, нужно локи расставить (хз как тестить)
- задержку добавить между закрытием и открытием дверей (moveLift - в многопольз. версии)
+ задержку добавить для движения между этажами
+ индикатор этажа
+ баг: лифт двигается с открытыми дверьми

долги
+ Лифт или элеватор - надо следовать одному названию везде!
- с моком надо что-то делать - каждый раз реализовывать метод руками влом
- ScreenFlowManager везде инициализируется в тестах - вынести
+ AsyncCallback - обработка ошибок одинакова должна быть везде - сделать суперкласс
- isElevatorExists - не нужен уже
- Переписать тесты на Lift чтобы они использовали MockFloorListener вместо door.assertXXX
